services:
  airguardian:
    build: .
    depends_on:
      mongodb:
        condition: service_healthy
      nats:
        condition: service_started
      kafka1:
        condition: service_started
      schema-registry:
        condition: service_started
    ports:
      - 8080:8080

  mongodb:
    image: mongo:latest
    environment:
      - MONGO_INITDB_ROOT_PASSWORD=secret
      - MONGO_INITDB_ROOT_USERNAME=root
    ports:
      - 27017:27017
    healthcheck:
      test: [ "CMD", "mongosh", "--eval", "db.adminCommand('ping')" ]
      interval: 1s
      timeout: 1s
      retries: 3
  nats:
    image: nats
    ports:
      - "4222:4222"
    healthcheck:
      test: [ "CMD", "nats", "ping" ]
      interval: 1s
      timeout: 1s
      retries: 3
  kafka1:
    image: 'bitnami/kafka:latest'
    ports:
      - "9092:9092"
    environment:
      - KAFKA_KRAFT_CLUSTER_ID=L0ZEQh1yTbGhNNUE7-6wSQ
      - KAFKA_ENABLE_KRAFT=yes
      - KAFKA_CFG_NODE_ID=1
      - KAFKA_CFG_PROCESS_ROLES=broker,controller
      - KAFKA_CFG_LISTENERS=PLAINTEXT://:29092,CONTROLLER://:9093,EXTERNAL://:9092
      - KAFKA_ADVERTISED_LISTENERS=PLAINTEXT://kafka1:29092,EXTERNAL://localhost:9092
      - KAFKA_CFG_LISTENER_SECURITY_PROTOCOL_MAP=CONTROLLER:PLAINTEXT,EXTERNAL:PLAINTEXT,PLAINTEXT:PLAINTEXT
      - KAFKA_CFG_CONTROLLER_QUORUM_VOTERS=1@kafka1:9093
      - KAFKA_CFG_CONTROLLER_LISTENER_NAMES=CONTROLLER
    volumes:
      - kafka-data:/var/lib/kafka/data
  schema-registry:
    image: confluentinc/cp-schema-registry:7.5.1
    ports:
      - "8081:8081"
    depends_on:
      - kafka1
    environment:
      SCHEMA_REGISTRY_HOST_NAME: schema-registry
      SCHEMA_REGISTRY_KAFKASTORE_BOOTSTRAP_SERVERS: PLAINTEXT://kafka1:29092

  redis-air-guardian:
    image: redis:alpine3.18
    ports:
      - "6379:6379"
volumes:
  mongo-data:
  kafka-data:

